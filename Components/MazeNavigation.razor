@inject IJSRuntime JSRuntime

<nav id="navigation" class="fixed bottom-0 right-0 @(isMenuOpen ? "bg-gray-800" : "") text-white p-4 rounded-md shadow-lg nav-menu" role="navigation">
    <button class="@(isMenuOpen ? " hover:bg-red-500" : " hover:bg-green-500") text-white font-bold w-12 transition-all duration-300" @onclick="ToggleMenu" aria-label="Toggle Menu">
        <img  src="@(isMenuOpen ? "images/Buttons/Menu/X.png" : "images/Buttons/Menu/Menu.png")" alt="Menu Toggle " class="w-full transition duration-300 hover:brightness-75 active:brightness-50"  />
    </button>

    <div class="mt-4 grid grid-cols-3 gap-4 items-center lg:grid" style="display: @(isMenuOpen ? "grid" : "none");">
        <button class="col-start-2 bg-blue-500 hover:bg-blue-700 text-white font-bold rounded-full transition-all duration-300" @onclick='async () => await MovePlayer.InvokeAsync("up")' aria-label="Move Up">
            <img src="/images/Buttons/Arrows/Up.png" class="w-full transition duration-300 hover:brightness-75 active:brightness-50">
        </button>
        <button class="col-start-1 col-span-1 bg-blue-500 hover:bg-blue-700 text-white font-bold rounded-full transition-all duration-300" @onclick='async () => await MovePlayer.InvokeAsync("left")' aria-label="Move Left">
             <img src="/images/Buttons/Arrows/Left.png" class="w-full transition duration-300 hover:brightness-75 active:brightness-50">
        </button>
        <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold  rounded-full transition-all duration-300" @onclick='async () => await MovePlayer.InvokeAsync("down")' aria-label="Move Down">
            <img src="/images/Buttons/Arrows/Down.png" class="w-full transition duration-300 hover:brightness-75 active:brightness-50">
        </button>
        <button class=" bg-blue-500 hover:bg-blue-700 text-white font-bold  rounded-full transition-all duration-300" @onclick='async () => await MovePlayer.InvokeAsync("right")' aria-label="Move Right">
            <img src="/images/Buttons/Arrows/Right.png" class="w-full transition duration-300 hover:brightness-75 active:brightness-50">
        </button>
    </div>
    <div style="display: @(isMenuOpen ? "block" : "none");">
        <button class="p-0 focus:outline-none" @onclick='async () => await Power.InvokeAsync()' aria-label="Power">
            <img src="/images/Buttons/Specials/Power.png" class="w-full transition duration-300 hover:brightness-75 active:brightness-50">
        </button>
        <button class="p-0 focus:outline-none" @onclick='async () => await Attack.InvokeAsync()' aria-label="Attack">
            <img src="/images/Buttons/Specials/Attack.png" class="w-full transition duration-300 hover:brightness-75 active:brightness-50">
        </button>
    </div>
</nav>

<script>
    window.getWindowWidth = function () {
        return window.innerWidth;
    };
</script>

<style>
#navigation {
    touch-action: manipulation;
}
</style>

@code { 
    private bool isMenuOpen = true;

    [Parameter]
    public EventCallback<string> MovePlayer { get; set; }
    
    [Parameter]
    public EventCallback Attack { get; set; }

    [Parameter]
    public EventCallback Power { get; set; }

    private async Task ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var width = await JSRuntime.InvokeAsync<int>("getWindowWidth");
            isMenuOpen = width <= 768;
            await InvokeAsync(StateHasChanged);
        }
    }
}
