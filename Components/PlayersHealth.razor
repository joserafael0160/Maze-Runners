@using System.Collections.Generic
@using AnimeMaze.Models
@using AnimeMaze.Services

<aside class="fixed bottom-0 left-0 w-28 flex flex-col gap-4 p-2 bg-gray-100 rounded-lg shadow-md">
    @if (Players != null)
    {
        @foreach (var player in Players)
        {
            if (player.TemporaryEffects.Count > 0)
            {
                <div class="mb-2">
                    <h4 class="font-bold text-gray-700">Effects:</h4>
                    <ul class="list-disc list-inside">
                        @foreach (var effect in player.TemporaryEffects)
                        {
                            if (effect.TurnsRemaining > 0)
                            {
                                <li class="text-sm text-gray-600">@effect.Name <span class="text-xl text-green-500">@effect.TurnsRemaining</span></li>
                            }
                        }
                    </ul>
                </div>    
            }
            
            
            string borderClass = player == TurnManager.CurrentPlayer ? "border-4 border-blue-800" : "border-2 border-gray-400";

            <article class="relative p-2 flex items-center bg-white rounded-lg shadow-lg @borderClass">
                <img src="@player.HeroSelected?.Image.Down" alt="@player.HeroSelected?.Name's avatar" class="h-8 w-8 rounded-full"/>
                <div class="flex flex-col ml-2">
                    <p class="text-red-500 font-semibold">@player.Health</p>
                    <p class="text-black text-sm">@player.HeroSelected?.Power.CurrentCooldown</p>
                </div>
                <div class="absolute inset-0 flex flex-col items-center justify-center bg-white bg-opacity-75 opacity-0 hover:opacity-100 transition-opacity duration-300 rounded-lg">
                    <h3 class="text-sm font-semibold text-black">@player.HeroSelected?.Name</h3>
                </div>
            </article>
        }
    }
</aside>

@code {
    [Parameter]
    public List<Player>? Players { get; set; }
}
